// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApp.WebAPI.Data;

#nullable disable

namespace MyApp.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251008085345_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyApp.WebAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "asian.svg",
                            Name = "Asian",
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "western.svg",
                            Name = "Western",
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoInvoice")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalCourse")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            InvoiceId = 1,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoInvoice = "INV-001",
                            TotalCourse = 1,
                            TotalPrice = 100000.0,
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.InvoiceMenuCourse", b =>
                {
                    b.Property<int>("IMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IMId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MSId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IMId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MSId");

                    b.ToTable("InvoiceMenuCourses");

                    b.HasData(
                        new
                        {
                            IMId = 1,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 1,
                            MSId = 1,
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourse", b =>
                {
                    b.Property<int>("MenuCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuCourseId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuCourseId");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuCourses");

                    b.HasData(
                        new
                        {
                            MenuCourseId = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "tomyum",
                            Image = "tomyum.svg",
                            Name = "Tomyum",
                            Price = 100000.0,
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuCourseId = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn design principles",
                            Image = "pizza.svg",
                            Name = "Pizza",
                            Price = 150000.0,
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourseSchedule", b =>
                {
                    b.Property<int>("MSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MSId"));

                    b.Property<int>("Available")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuCourseId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MSId");

                    b.HasIndex("MenuCourseId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("MenuCourseSchedules");

                    b.HasData(
                        new
                        {
                            MSId = 1,
                            Available = 10,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 1,
                            ScheduleId = 1,
                            Status = "Active",
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 2,
                            Available = 8,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 2,
                            ScheduleId = 2,
                            Status = "Active",
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MyClass", b =>
                {
                    b.Property<int>("MyClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MyClassId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuCourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MyClassId");

                    b.HasIndex("MenuCourseId");

                    b.HasIndex("UserId");

                    b.ToTable("MyClasses");

                    b.HasData(
                        new
                        {
                            MyClassId = 1,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 1,
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            PaymentMethodId = 1,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "bca.png",
                            Name = "BCA",
                            Status = "Active",
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentMethodId = 2,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "gopay.png",
                            Name = "GoPay",
                            Status = "Active",
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            ScheduleId = 1,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleDate = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ScheduleId = 2,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleDate = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            Name = "Admin User",
                            Password = "admin123",
                            Row = "Admin",
                            Status = "Active",
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@example.com",
                            Name = "John Doe",
                            Password = "password",
                            Row = "User",
                            Status = "Active",
                            UpdatedAt = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Invoice", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.InvoiceMenuCourse", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.Invoice", "Invoice")
                        .WithMany("InvoiceMenuCourses")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApp.WebAPI.Models.MenuCourseSchedule", "MenuCourseSchedule")
                        .WithMany("InvoiceMenuCourses")
                        .HasForeignKey("MSId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("MenuCourseSchedule");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourse", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.Category", "Category")
                        .WithMany("MenuCourses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourseSchedule", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.MenuCourse", "MenuCourse")
                        .WithMany("MenuCourseSchedules")
                        .HasForeignKey("MenuCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApp.WebAPI.Models.Schedule", "Schedule")
                        .WithMany("MenuCourseSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuCourse");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MyClass", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.MenuCourse", "MenuCourse")
                        .WithMany("MyClasses")
                        .HasForeignKey("MenuCourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MyApp.WebAPI.Models.User", "User")
                        .WithMany("MyClasses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuCourse");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Category", b =>
                {
                    b.Navigation("MenuCourses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceMenuCourses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourse", b =>
                {
                    b.Navigation("MenuCourseSchedules");

                    b.Navigation("MyClasses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourseSchedule", b =>
                {
                    b.Navigation("InvoiceMenuCourses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Schedule", b =>
                {
                    b.Navigation("MenuCourseSchedules");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.User", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("MyClasses");
                });
#pragma warning restore 612, 618
        }
    }
}

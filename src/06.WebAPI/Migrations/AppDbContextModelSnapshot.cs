// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApp.WebAPI.Data;

#nullable disable

namespace MyApp.WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyApp.WebAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "asian.svg",
                            Name = "Asian",
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "coldDrink.svg",
                            Name = "Cold Drink",
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "cookies.svg",
                            Name = "Cookies",
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoInvoice")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TotalCourse")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("NoInvoice")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.InvoiceMenuCourse", b =>
                {
                    b.Property<int>("IMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IMId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MSId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IMId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MSId");

                    b.ToTable("InvoiceMenuCourses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourse", b =>
                {
                    b.Property<int>("MenuCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuCourseId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuCourseId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name", "CategoryId")
                        .IsUnique();

                    b.ToTable("MenuCourses");

                    b.HasData(
                        new
                        {
                            MenuCourseId = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tom Yum dari Thailand",
                            Image = "tomyum.jpg",
                            Name = "Tom Yum Thailand",
                            Price = 450000m,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuCourseId = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Minuman rasa strawberry",
                            Image = "strawberry_float.jpg",
                            Name = "Strawberry Float",
                            Price = 150000m,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuCourseId = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chocholate Cookies",
                            Image = "cookies.jpg",
                            Name = "Chocholate Cookies",
                            Price = 200000m,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuCourseId = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Soto Banjar Limau Kuit",
                            Image = "greentea_cheesecake.jpg",
                            Name = "Soto Banjar Limau Kuit",
                            Price = 150000m,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuCourseId = 5,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Green Tea Cheesecake",
                            Image = "cheesecake.jpg",
                            Name = "Green Tea Cheesecake",
                            Price = 400000m,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuCourseId = 6,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Spagetti",
                            Image = "spagetti.jpg",
                            Name = "Italian Spagetti Bolognese",
                            Price = 450000m,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourseSchedule", b =>
                {
                    b.Property<int>("MSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MSId"));

                    b.Property<int>("AvailableSlot")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuCourseId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MSId");

                    b.HasIndex("MenuCourseId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("MenuCourseSchedules");

                    b.HasData(
                        new
                        {
                            MSId = 1,
                            AvailableSlot = 10,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 1,
                            ScheduleId = 1,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 2,
                            AvailableSlot = 12,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 1,
                            ScheduleId = 2,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 3,
                            AvailableSlot = 0,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 1,
                            ScheduleId = 3,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 4,
                            AvailableSlot = 10,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 2,
                            ScheduleId = 2,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 5,
                            AvailableSlot = 0,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 2,
                            ScheduleId = 3,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 6,
                            AvailableSlot = 9,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 2,
                            ScheduleId = 4,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 7,
                            AvailableSlot = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 3,
                            ScheduleId = 1,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 8,
                            AvailableSlot = 0,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 3,
                            ScheduleId = 2,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 9,
                            AvailableSlot = 10,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 4,
                            ScheduleId = 3,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 10,
                            AvailableSlot = 5,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 4,
                            ScheduleId = 4,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 11,
                            AvailableSlot = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 5,
                            ScheduleId = 1,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 12,
                            AvailableSlot = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 5,
                            ScheduleId = 2,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MSId = 13,
                            AvailableSlot = 10,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuCourseId = 6,
                            ScheduleId = 4,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MyClass", b =>
                {
                    b.Property<int>("MyClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MyClassId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MSId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MyClassId");

                    b.HasIndex("MSId");

                    b.HasIndex("UserId");

                    b.ToTable("MyClasses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            PaymentMethodId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "gopay.svg",
                            Name = "Gopay",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentMethodId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "dana.svg",
                            Name = "Dana",
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            ScheduleId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleDate = new DateTime(2025, 10, 6, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ScheduleId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleDate = new DateTime(2025, 10, 7, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ScheduleId = 3,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleDate = new DateTime(2025, 10, 8, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ScheduleId = 4,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleDate = new DateTime(2025, 10, 9, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            Name = "Admin User",
                            Password = "hashed_password_1",
                            Role = 0,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice@example.com",
                            Name = "Alice",
                            Password = "hashed_password_2",
                            Role = 1,
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob@example.com",
                            Name = "Bob",
                            Password = "hashed_password_3",
                            Role = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Invoice", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.InvoiceMenuCourse", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.Invoice", "Invoice")
                        .WithMany("InvoiceMenuCourses")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApp.WebAPI.Models.MenuCourseSchedule", "MenuCourseSchedule")
                        .WithMany("InvoiceMenuCourses")
                        .HasForeignKey("MSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("MenuCourseSchedule");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourse", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.Category", "Category")
                        .WithMany("MenuCourses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourseSchedule", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.MenuCourse", "MenuCourse")
                        .WithMany("MenuCourseSchedules")
                        .HasForeignKey("MenuCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApp.WebAPI.Models.Schedule", "Schedule")
                        .WithMany("MenuCourseSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuCourse");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MyClass", b =>
                {
                    b.HasOne("MyApp.WebAPI.Models.MenuCourseSchedule", "MenuCourseSchedule")
                        .WithMany("MyClasses")
                        .HasForeignKey("MSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApp.WebAPI.Models.User", "User")
                        .WithMany("MyClasses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuCourseSchedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Category", b =>
                {
                    b.Navigation("MenuCourses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceMenuCourses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourse", b =>
                {
                    b.Navigation("MenuCourseSchedules");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.MenuCourseSchedule", b =>
                {
                    b.Navigation("InvoiceMenuCourses");

                    b.Navigation("MyClasses");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.Schedule", b =>
                {
                    b.Navigation("MenuCourseSchedules");
                });

            modelBuilder.Entity("MyApp.WebAPI.Models.User", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("MyClasses");
                });
#pragma warning restore 612, 618
        }
    }
}

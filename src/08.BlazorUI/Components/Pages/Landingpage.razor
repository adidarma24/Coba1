@page "/"
@using MudBlazor

<PageTitle>Lending Pages</PageTitle>

<!-- Hero Section -->
<MudPaper Class="hero-section" Square="true">
    <MudContainer>
        <MudText Typo="Typo.h4" Class="hero-title">
            Be the next great chef
        </MudText>
        <MudText Typo="Typo.h6" Class="hero-subtitle">
            We are able to awaken your cooking skills to become a classy chef
            and ready to dive into the professional world
        </MudText>
    </MudContainer>
</MudPaper>

<!-- Statistic Section -->
<MudContainer MaxWidth="MaxWidth.Large" Class="py-6 px-3">
    <MudGrid Justify="Justify.Center" AlignItems="AlignItems.Stretch" Spacing="4">
        @foreach (StatItem stat in stats)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard Class="stat-card h-100">
                    <MudCardContent Class="stat-card-content">
                        <MudText Typo="Typo.h4" Color="Color.Warning" Class="font-weight-bold">@stat.Number</MudText>
                        <MudText Typo="Typo.body2">@stat.Description</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

<!-- More Professional Class Section -->
<MudContainer MaxWidth="MaxWidth.False" Class="my-8">
    <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-10 title-text">
        More Professional Classes
    </MudText>
    <MudGrid Spacing="4">
        @foreach (FoodItem item in Foods)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard Elevation="0"
                         @onclick="() => OnCardClick(item)">
                    <MudCardMedia Image="@item.Image" Height="180" Alt="@item.Title" />
                    <MudCardContent>
                        <MudText Typo="Typo.caption" Class="text-grey">@item.Category</MudText>
                        <MudText Typo="Typo.subtitle1">@item.Title</MudText>
                        <MudDivider Class="my-3" />
                        <MudText Typo="Typo.body2" Color="Color.Warning">@item.Price</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</MudContainer>


<!-- Benefit Section -->
<MudPaper Class="my-8 bg-benefit position-relative">
    <MudContainer MaxWidth="MaxWidth.False" Class="benefit-container">
        <MudText Typo="Typo.h3" Class="mb-2 text-white ms-7">Gets your best benefit</MudText>
        <MudText Typo="Typo.body1" Class="max-w text-white ms-7">
            Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam.
        </MudText>
    </MudContainer>
</MudPaper>

<!-- Food Type Section -->
<MudContainer MaxWidth="MaxWidth.False" Class="food-container">
    <MudText Typo="Typo.h5" Align="Align.Center" Class="title-text">
        More food type as you can choose
    </MudText>
    <!-- Foot Card -->
    <MudGrid Class="food-grid">
        @foreach (FoodType food in FoodTypes)
        {
            <MudItem xs="12" sm="6" md="4" lg="3">
                <MudCard Class="" Elevation="0">
                    <MudCardMedia Image="@food.Image" Height="120" Alt="@food.Name" />
                    <MudCardContent>
                        <MudText Typo="Typo.h6" Align="Align.Center" Class="mt-4" Style="font-size:24px;">
                            @food.Name
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

@code {
      public record FoodItem(string Image, string Category, string Title, string Price);

    private void OnCardClick(FoodItem item)
    {    }
    public List<FoodItem> Foods = new List<FoodItem>()
    {
        new FoodItem(Image: "/images/image11.svg", Category: "Asian", Title: "Tom Yum Thailand", Price: "IDR 450.000"),
        new FoodItem(Image: "/images/image12.svg", Category: "Cold Drink", Title: "Strawberry Float", Price: "IDR 150.000"),
        new FoodItem(Image: "/images/image13.svg", Category: "Cookies", Title: "Chocolate Cookies", Price: "IDR 200.000"),
        new FoodItem(Image: "/images/image14.svg", Category: "Dessert", Title: "Green Tea Cheesecake", Price: "IDR 400.000"),
        new FoodItem(Image: "/images/image15.svg", Category: "Asian", Title: "Soto Banjar Limau Kuit", Price: "IDR 150.000"),
        new FoodItem(Image: "/images/image16.svg", Category: "Western", Title: "Italian Spaghetti Bolognese", Price: "IDR 450.000"),
    };
    public record FoodType(string Image, string Name);

public List<FoodType> FoodTypes = new List<FoodType>()
{
    new FoodType(Image: "/images/image2.svg", "Asian"),
    new FoodType(Image: "/images/image3.svg", Name: "Cold Drink"),
    new FoodType(Image: "/images/image4.svg", Name: "Cookies"),
    new FoodType(Image: "/images/image5.svg", Name: "Dessert"),
    new FoodType(Image: "/images/image6.svg", Name: "Eastern"),
    new FoodType(Image: "/images/image7.svg", Name: "Hot Drink"),
    new FoodType(Image: "/images/image8.svg", Name: "Junk Food"),
    new FoodType(Image: "/images/image9.svg", Name: "Western"),
};
     public record StatItem(string Number, string Description);

private List<StatItem> stats = new List<StatItem>()
{
    new StatItem(Number: "200+", Description: "Various cuisines available in professional class"),
    new StatItem(Number: "50+", Description: "A chef who is reliable and has his own characteristics in cooking"),
    new StatItem(Number: "30+", Description: "Cooperate with trusted and upscale restaurants")
};
}

<style>
    .hero-section {
    background: url("/images/hero1.svg") center/cover no-repeat;
    width: 100%;
    min-height: 350px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
}

.hero-title {
    color: white;
    font-weight: bold;
    margin-bottom: 0.5rem;
}

.hero-subtitle {
    color: white;
    max-width: 600px;
    margin: 0 auto;
}

    .font-weight-bold {
        font-weight: 700;
    }

    .stat-card {
        border: 1px solid #b4b4b4;
        min-height: 120px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 1.5rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        border-radius: 24px;
    }

    .stat-card-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 1.5rem;
}


.card-hover {
    cursor: pointer; 
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card-hover:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.2);
}

    .bg-benefit {
        background: url("/images/image1.svg") center/cover no-repeat;
    }

    .min-h-260 {
        min-height: 260px;
    }
    
    .max-w {
        max-width: 1200px;
    }

.food-container {
    margin-top: 40px;
    margin-bottom: 40px;
}

.title-text {
    font-weight: 600;
    margin-bottom: 20px;
    color: grey;
}

.food-grid {
    justify-content: center;
     padding: 1rem 8rem 4rem 8rem;
}

.food-img {
    width: 100%;
    height: 150px;
    object-fit: cover;
}

.text-grey {
    color: grey;
}

.food-title {
    margin-top: 1rem;
    font-size: 1.25rem; 
    text-align: center;
}

.benefit-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: 260px;
    padding: 0 1.5rem; 
}
</style>
